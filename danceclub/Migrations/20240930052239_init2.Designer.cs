// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using danceclub.Models;

#nullable disable

namespace danceclub.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240930052239_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("danceclub.Models.DanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DanceTypes");
                });

            modelBuilder.Entity("danceclub.Models.GroupDanceType", b =>
                {
                    b.Property<int>("DanceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DanceTypeId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupDanceTypes");
                });

            modelBuilder.Entity("danceclub.Models.GroupStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupStudents");
                });

            modelBuilder.Entity("danceclub.Models.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("danceclub.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DanceTypeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("danceclub.Models.StudentSchedule", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "ScheduleId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("StudentSchedules");
                });

            modelBuilder.Entity("danceclub.Models.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("danceclub.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("danceclub.Models.GroupDanceType", b =>
                {
                    b.HasOne("danceclub.Models.DanceType", "DanceType")
                        .WithMany("GroupDanceTypes")
                        .HasForeignKey("DanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("danceclub.Models.Groups", "Group")
                        .WithMany("DanceTypes")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanceType");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("danceclub.Models.GroupStudent", b =>
                {
                    b.HasOne("danceclub.Models.Groups", "Groups")
                        .WithMany("GroupStudents")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("danceclub.Models.Students", "Students")
                        .WithMany("GroupsStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("danceclub.Models.Schedule", b =>
                {
                    b.HasOne("danceclub.Models.DanceType", "DanceType")
                        .WithMany("Schedule")
                        .HasForeignKey("DanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("danceclub.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanceType");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("danceclub.Models.StudentSchedule", b =>
                {
                    b.HasOne("danceclub.Models.Schedule", "Schedules")
                        .WithMany("StudentSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("danceclub.Models.Students", "Students")
                        .WithMany("StudentSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedules");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("danceclub.Models.DanceType", b =>
                {
                    b.Navigation("GroupDanceTypes");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("danceclub.Models.Groups", b =>
                {
                    b.Navigation("DanceTypes");

                    b.Navigation("GroupStudents");
                });

            modelBuilder.Entity("danceclub.Models.Schedule", b =>
                {
                    b.Navigation("StudentSchedules");
                });

            modelBuilder.Entity("danceclub.Models.Students", b =>
                {
                    b.Navigation("GroupsStudents");

                    b.Navigation("StudentSchedules");
                });

            modelBuilder.Entity("danceclub.Models.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
